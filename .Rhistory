require(graphics)
library(RColorBrewer)
library(dynlm)
library(ggcorrplot)
library(olsrr)
train <- read_csv("train.csv")
test <- read_csv("test.csv")
head(train)
dim(train)
install.packages("olsrr")
library(tidyverse)
library(tseries)
library(car)
library(forecast)
require(stats)
library(vars)
library(MASS)
require(stats4)
require("datasets")
require(graphics)
library(RColorBrewer)
library(dynlm)
library(ggcorrplot)
library(olsrr)
library(tidyverse)
library(tseries)
library(car)
library(forecast)
require(stats)
library(vars)
library(MASS)
require(stats4)
require("datasets")
require(graphics)
library(RColorBrewer)
library(dynlm)
library(ggcorrplot)
library(olsrr)
library(readxl)
library(ISLR)
library(dplyr)
library(tidyverse)
library(class)
library(gridExtra)
library(caTools)
library(boot)
updater()
updateR()
install.packages("installr")
library(installr)
updateR()
library(tidyverse)
library(tseries)
library(car)
library(forecast)
require(stats)
library(vars)
library(MASS)
require(stats4)
require("datasets")
require(graphics)
library(RColorBrewer)
library(dynlm)
library(ggcorrplot)
library(olsrr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tseries)
library(car)
library(forecast)
require(stats)
library(vars)
library(MASS)
require(stats4)
require("datasets")
require(graphics)
library(RColorBrewer)
library(dynlm)
library(ggcorrplot)
library(olsrr)
R.version.string
install.packages("cli")
install.packages("cli")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tseries)
library(car)
library(forecast)
require(stats)
library(vars)
library(MASS)
require(stats4)
require("datasets")
require(graphics)
library(RColorBrewer)
library(dynlm)
library(ggcorrplot)
library(olsrr)
library(readxl)
library(ISLR)
library(dplyr)
library(tidyverse)
library(class)
library(gridExtra)
library(caTools)
library(boot)
git config --global user.email "zhijianli9999@gmail.com"
head(train)
dim(train)
View(train)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
train$Sex01 <- train$Sex == "female"
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1
mean(train$Survived)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1
predict(lda1, test, type = "response")
train$Sex01 <- train$Sex == "female"
train$Sex01 <- train$Sex == "female"
test$Sex01 <- test$Sex == "female"
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1
predict(lda1, test, type = "response")
?predict
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1
predict(lda1, test, type = "response", na.action = na.omit)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1
predict(lda1, test, type = "response", na.action = na.exclude)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1
lda1pred <- predict(lda1, test, type = "response")
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1
lda1pred <- predict(lda1, test, type = "response")
lda1pred$posterior
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1
lda1pred <- predict(lda1, train, type = "response")
mean(lda1pred$posterior == train$Survived)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1
lda1pred <- predict(lda1, train, type = "response")
mean(lda1pred$posterior == train$Survived, na.rm = T)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1
lda1pred <- predict(lda1, train, type = "response")
mean(lda1pred$class == train$Survived, na.rm = T)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train)
lda1pred <- predict(lda1, train, type = "response")
mean(lda1pred$class == train$Survived)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action = na.omit)
lda1pred <- predict(lda1, train, type = "response")
mean(lda1pred$class == train$Survived, na.rm = T)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action = na.exclude())
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action = na.exclude)
lda1pred <- predict(lda1, train, type = "response")
mean(lda1pred$class == train$Survived, na.rm = T)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action = na.omit(train))
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action(train))
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action = na.omit)
lda1pred <- predict(lda1, train, type = "response")
mean(lda1pred$class == train$Survived, na.rm = T)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action = na.omit)
lda1pred <- predict(lda1, train, type = "response")
mean(lda1pred$class == train$Survived, na.rm = T)
lda1pred <- predict(lda1, train, type = "response", na.action = na.omit)
mean(lda1pred$class == train$Survived, na.rm = T)
?predict
?na.action
?na.action
lda1pred <- predict(lda1, train, type = "response", na.action = na.pass)
mean(lda1pred$class == train$Survived, na.rm = T)
lda1pred <- predict(lda1, train, type = "response", na.action = na.pass)
?predict
lda1pred <- predict(lda1, train, type = "response", na.action = na.pass)
qda1 <- qda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action = na.exclude)
qda1pred <- predict(qda1, train, type = "response", na.action = na.exclude)
mean(qda1pred$class == train$Survived, na.rm = T)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action = na.exclude)
lda1pred <- predict(lda1, train, type = "response", na.action = na.exclude)
mean(lda1pred$class == train$Survived, na.rm = T)
qda1 <- qda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch , data = train, na.action = na.exclude)
qda1pred <- predict(qda1, train, type = "response", na.action = na.exclude)
mean(qda1pred$class == train$Survived, na.rm = T)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch , data = train, na.action = na.exclude)
lda1pred <- predict(lda1, train, type = "response", na.action = na.exclude)
mean(lda1pred$class == train$Survived, na.rm = T)
qda2 <- qda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch , data = train, na.action = na.exclude)
qda2pred <- predict(qda2, train, type = "response", na.action = na.exclude)
mean(qda2pred$class == train$Survived, na.rm = T)
qda2 <- qda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch , data = train, na.action = na.exclude)
qda2pred <- predict(qda2, train, type = "response", na.action = na.exclude)
mean(qda2pred$class == train$Survived, na.rm = T)
qda2 <- qda(Survived ~ Pclass + Sex01 + Age + I(Age^2) + SibSp + Parch , data = train, na.action = na.exclude)
qda2pred <- predict(qda2, train, type = "response", na.action = na.exclude)
mean(qda2pred$class == train$Survived, na.rm = T)
qda1 <- qda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action = na.exclude)
qda1pred <- predict(qda1, train, type = "response", na.action = na.exclude)
mean(qda1pred$class == train$Survived, na.rm = T)
lda1 <- lda(Survived ~ Pclass + Sex01 + Age + SibSp + Parch + Fare, data = train, na.action = na.exclude)
lda1pred <- predict(lda1, train, type = "response", na.action = na.exclude)
mean(lda1pred$class == train$Survived, na.rm = T)
qda2 <- qda(Survived ~ Pclass + Sex01 + Age + I(Age^2) + SibSp + Parch , data = train, na.action = na.exclude)
qda2pred <- predict(qda2, train, type = "response", na.action = na.exclude)
mean(qda2pred$class == train$Survived)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(MASS)
data("Boston")
mean(Boston$medv)
mu <- mean(Boston$medv)
mu
muse <- sd(Boston$medv) / sqrt(length(Boston$medv))
muse <- sd(Boston$medv) / sqrt(length(Boston$medv))
muse
set.seed(59)
boot(Boston$medv, function(x){sd(x)/sqrt(length(x))}, R=1000)
se.fn <- function(x, ind){
y <- x[ind]
sd(y)/sqrt(length(y))
}
muse <- se.fn(Boston$medv)
muse
set.seed(59)
boot(Boston$medv, se.fn, R=1000)
set.seed(59)
boot(Boston$medv, mean, R=1000)
set.seed(59)
boot(Boston$medv, mean, R=1000)
?mean.default
set.seed(59)
boot(Boston$medv, mean(trim = 0), R=1000)
?boot
set.seed(59)
boot(Boston$medv, mean, R=1000)
se.fn <- function(x, ind = 1:length(x)){
y <- x[ind]
sd(y)/sqrt(length(y))
}
muse <- se.fn(Boston$medv)
muse
set.seed(59)
boot(Boston$medv, se.fn, R=1000)
set.seed(59)
boot(Boston$medv, se.fn, R=100)
set.seed(59)
boot(Boston$medv, se.fn, R=100)
set.seed(59)
boot(Boston$medv, se.fn, R=10)
se.fn <- function(x, ind){
y <- x[ind]
sd(y)/sqrt(length(y))
}
muse <- se.fn(Boston$medv)
muse
set.seed(59)
boot(Boston$medv, se.fn, R=10)
se.fn <- function(x){
y <- x[ind]
sd(y)/sqrt(length(y))
}
muse <- se.fn(Boston$medv)
se.fn <- function(x){
y <- x[1:length(x)]
sd(y)/sqrt(length(y))
}
muse <- se.fn(Boston$medv)
muse
set.seed(59)
boot(Boston$medv, se.fn, R=10)
se.fn <- function(x, ind){
y <- x[ind]
sd(y)/sqrt(length(y))
}
muse <- se.fn(Boston$medv)
muse
se.fn <- function(x, ind){
sd(x[ind])/sqrt(length(x))
}
muse <- se.fn(Boston$medv)
muse
set.seed(59)
boot(Boston$medv, se.fn, R=10)
set.seed(59)
boot(Boston$medv, stderr, R=10)
set.seed(59)
boot(Boston$medv, sd, R=10)
set.seed(59)
boot(Boston$medv, mean, R=10)
set.seed(59)
boot(Boston$medv, se.fn, R=10)
set.seed(59)
boot(Boston$medv, se.fn, R=1000)
set.seed(59)
boot(Boston$medv, se.fn, R=10)
set.seed(59)
boot(Boston$medv, se.fn, R=1000)
set.seed(59)
boot(Boston$medv, eq, R=1000)
se.fn <- function(x, ind){
sd(x[ind])/sqrt(length(x))
}
muse <- se.fn(Boston$medv)
muse
eq <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, eq, R=1000)
set.seed(59)
boot(Boston$medv, eq, R=10000)
set.seed(59)
boot(Boston$medv, eq, R=100000)
se.fn <- function(x, ind){
sd(x[ind])/sqrt(length(x))
}
muse <- se.fn(Boston$medv)
muse
mean.boot <- function(x, ind){
mean(x[ind])
}
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, mean.boot, R=1000)
t.test(Boston$medv)
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
medv.boot <- boot(Boston$medv, mean.boot, R=1000)
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
medv.boot <- boot(Boston$medv, mean.boot, R=1000)
medv.boot$data
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
medv.boot <- boot(Boston$medv, mean.boot, R=1000)
medv.boot$t0
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
medv.boot <- boot(Boston$medv, mean.boot, R=1000)
medv.boot$t
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
medv.boot <- boot(Boston$medv, mean.boot, R=1000)
medv.boot$sim
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
medv.boot <- boot(Boston$medv, mean.boot, R=1000)
medv.boot$stype
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
medv.boot <- boot(Boston$medv, mean.boot, R=1000)
medv.boot$statistic()
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
medv.boot <- boot(Boston$medv, mean.boot, R=1000)
medv.boot$statistic
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
medv.boot <- boot(Boston$medv, mean.boot, R=1000)
medv.boot$weights
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, mean.boot, R=1000)
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, mean.boot, R=1000)
medv.boot$strata
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, mean.boot, R=1000)
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, mean.boot, R=1000)
medv.boot$t
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, mean.boot, R=1000)
summary(medv.boot)
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, mean.boot, R=1000)
summary(medv.boot)
medv.boot$bootSE
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, mean.boot, R=1000)
summary(medv.boot)
medv.boot$stderr
?boot
c(mu+2*0.4149207, mu-2*0.4149207)
c(mu-2*0.4149207, mu+2*0.4149207)
medv.t <- t.test(Boston$medv)
medv.t
mumed <- median(Boston$medv)
mumed <- median(Boston$medv)
mumed
boot(Boston$medv, median, R = 1000)
boot(Boston$medv, median, R = 100)
?median
boot(Boston$medv, med.fn, R=1000)
med.fn<- function(x, ind){
if(length(x)%%2 == 0){
mean(sort(x)[c(length(x)/2, length(x)/2 +1)])
}
else{
sort(x)[length(x)/2 + 0.5]
}
}
mumed <- median(Boston$medv)
mumed
boot(Boston$medv, med.fn, R=1000)
boot(Boston$medv, med.fn, R=10)
med.fn<- function(x, ind){
median(x[ind])
}
mumed <- median(Boston$medv)
mumed
boot(Boston$medv, med.fn, R=10)
boot(Boston$medv, med.fn, R=10)
boot(Boston$medv, med.fn, R=10)
boot(Boston$medv, med.fn, R=10)
boot(Boston$medv, med.fn, R=5)
boot(Boston$medv, med.fn, R=5)
boot(Boston$medv, med.fn, R=5)
boot(Boston$medv, med.fn, R=5)
boot(Boston$medv, med.fn, R=5)
boot(Boston$medv, med.fn, R=5)
boot(Boston$medv, med.fn, R=5)
boot(Boston$medv, med.fn, R=2)
boot(Boston$medv, med.fn, R=1000)
boot(Boston$medv, med.fn, R=10)
boot(Boston$medv, med.fn, R=10)
boot(Boston$medv, med.fn, R=10)
boot(Boston$medv, med.fn, R=100)
boot(Boston$medv, med.fn, R=100)
boot(Boston$medv, med.fn, R=100)
boot(Boston$medv, med.fn, R=1000)
set.seed(59)
boot(Boston$medv, med.fn, R=1000)
set.seed(59)
boot(Boston$medv, med.fn, R=1000)
?quantile
tenth.fn <- function(x, ind){
quantile(x[ind], 0.1)
}
boot(Boston$medv, tenth.fn, R=1000)
quantile(Boston$medv, 0.1)
tenth.fn <- function(x, ind){
quantile(x[ind], 0.1)
}
boot(Boston$medv, tenth.fn, R=1000)
set.seed(59)
tenth.fn <- function(x, ind){
quantile(x[ind], 0.1)
}
boot(Boston$medv, tenth.fn, R=1000)
se.fn <- function(x, ind){
sd(x[ind])/sqrt(length(x))
}
muse <- sd(Boston$medv)/sqrt(length(Boston$medv))
muse
rm(list=ls())
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, mean.boot, R=1000)
install.packages("boot")
library(boot)
mean.boot <- function(x, ind){
mean(x[ind])
}
set.seed(59)
boot(Boston$medv, mean.boot, R=1000)
